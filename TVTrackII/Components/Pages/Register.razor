@page "/register"
@using Microsoft.AspNetCore.Identity
@using System.ComponentModel.DataAnnotations
@inject UserManager<ApplicationUser> UserManager
@inject NavigationManager Navigation

<h3>Registro de usuario</h3>

@if (!string.IsNullOrEmpty(Error))
{
    <div class="alert alert-danger">@Error</div>
}

<EditForm Model="registerModel" OnValidSubmit="HandleRegister">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label class="form-label">Correo electrónico</label>
        <InputText class="form-control" @bind-Value="registerModel.Email" />
    </div>

    <div class="mb-3">
        <label class="form-label">Contraseña</label>
        <InputText class="form-control" @bind-Value="registerModel.Password" type="password" />
    </div>

    <button class="btn btn-primary" type="submit">Registrarse</button>
</EditForm>

@code {
    private RegisterModel registerModel = new();
    private string? Error;

    private async Task HandleRegister()
    {
        var user = new ApplicationUser { UserName = registerModel.Email, Email = registerModel.Email };
        var result = await UserManager.CreateAsync(user, registerModel.Password);

        if (result.Succeeded)
        {
            Navigation.NavigateTo("/login");
        }
        else
        {
            Error = string.Join(", ", result.Errors.Select(e => e.Description));
        }
    }

    public class RegisterModel
    {
        [Required(ErrorMessage = "El correo es obligatorio")]
        [EmailAddress(ErrorMessage = "Correo inválido")]
        public string Email { get; set; } = "";

        [Required(ErrorMessage = "La contraseña es obligatoria")]
        [MinLength(6, ErrorMessage = "Mínimo 6 caracteres")]
        public string Password { get; set; } = "";
    }
}
